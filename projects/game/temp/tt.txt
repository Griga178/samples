

ТЗ 1.3 - Конец игры, обработка данных:
Дано:
точки "A" и "B", "distance" - Расстояние между точками,
radius - расстояние до границы вокруг точки,
"time" - время перемещения между точками.

Какие данные нужно достать, что бы понять насколько равномерным и прямолинейным
было перемещение из точки A в точку B

-->
...
Позиции на протяжении пути:
...
- Ускорение: - Если есть возможность фиксировать изменения скорости,
это поможет понять, было ли движение равномерным.
- Отклонения от прямой линии:
- Определите, насколько отклонения от прямого маршрута произошли, сравнив фактическое расстояние с расстоянием по прямой.
На основе собранных данных можно провести анализ, как следующее:
- Проверка на равномерность: если скорость в разные моменты времени значительно изменяется, это укажет на неравномерное движение.
- Проверка на прямолинейность: если промежуточные позиции отклоняются от прямой линии, это укажет на криволинейное движение.
Собрав все эти данные и проведя соответствующий анализ, вы сможете оценить, насколько равномерным и прямолинейным было перемещение.

Характеристики:
Длительность перемещения - мс (a-b, ..., a-z)
Скорость перемещения - пикс/мс
Отклонение от прямой -?
Точность, финиша - px (расстояние мыши от центра окружности в моменте finish)

Как считать результат игры?

как-то, фиксировать остановку мыши

game.go -> update
во время действия go() каждые 10мс записывать кординаты мыши
далее рассчитать на сколько прямолинейно двигалась мышь

Интерфейс:
... поработать с блоком настройки


задача:
есть 2 области A и B.
areaA = {coord: {x:1, y:1}, radius: 20, ...}
areaB = {coord: {x:2, y:2}, radius: 20, ...}

объект перемещается из точки A в точку B, что записывается в список -
moving = [{time: t, x: x, y: y}, ...]

характер движения должен быть прямолинейным и с одной скоростью

как это отследить?


moving = [{time: t, x: x, y: y}, ...]
напиши функцию на js принимает (moving),
  которая подсчитает среднюю скорость за весь промежуток от 0 до -1

  потом сравнить ср.скорсть с парами из списка moving и
  выдать числовой показатель, который поможет сравнить 2 разных "moving"
  на плавность
отдельно напиши функцию возвращающую расстояние между точками
добавь условие, если разница во времени между двумя моментами равна 0 то обхедени их



errors: !!!
когда distance < radius
script.js:442 Uncaught TypeError: Cannot read properties of null (reading 'time')
    at Analyzer.appendRow (script.js:442:40)
    at Game.finish (script.js:231:19)
    at Game.handleMouseRun (script.js:283:12)





напиши функию на js.
isStop
что есть
отслеживается движение мыши

если координаты мыши не менялись на протяжении 50 миллисекунд, то
запускается функция stop

this.isDeviationDetected = false
есть:
this.isStopped = false
handleMouseTrack () {
  console.log('track')
  const mousePos = this.getMousePos(event);
  const mouseCoords = {
      time: new Date(),
      x: mousePos.x,
      y: mousePos.y
  };
  this.moving.push(mouseCoords)
}
напиши функию, которая будет заполнять this.isStopped по условию
если координаты мыши не менялись на протяжении 50 миллисекунд


есть EventListenet, который каждый mousemove добавляет
mouseCoords = {
  step: circle,
  time: new Date(),
  x: mousePos.x,
  y: mousePos.y
}; в this.moving = []
напиши функцию checkStopV2(mouseCoords)
если координаты mouseCoords не поменялись относительно последнего элемента в
this.moving, то срабатывает функция isStopped(console.log("stop"))
