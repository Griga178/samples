'''
    Проверить есть ли путь от точки А до Б по hex-ам "по суше"

    0 из 3.py взять весь код
    1 в моменте ф-ци input_hex (2 раза) создать вывод из input_hex -> list(tuple)
    вывод координат всех стенок hex-ов (!= " ", != "x")
    1**
    2 создать словарь hex-ов {hex_id:int, border_cords:[(x,y),]}
    3 создать по одинаковым border_cords, множество(ва) - будут обозначать
    единую сушу -> [{hex_id_1, hex_id_2}, {hex_id_3, hex_id_4}]
    4 понять в каком hex_id находятся искомые точки
    5 если hex_id точкек принадлежат одному множеству -> True else False


'''

'''
5.py
в 4.py на этапе check_hex() (где еще input_hex) если check_hex() == False
создать словарь hex-ов - символов моря,
потом по аналогии с 4.py объединить id участков моря
возможен нюанс с границами, где неполные hex-ы

дальше "почти парралельно" перебирать все множества и строить пути, когда
путь будет найден - break

1 у point_A point_B находим hex_id start_id/finish_id
проверяем на финиш
множество удаляем из списка множеств - закидываем в переменную start_area/finish_area

2 ищем пересечения start_area с множествами внутри water_areas/ground_areas
проверяем на финиш


'''
